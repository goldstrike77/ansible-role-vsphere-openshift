---
- name: Manages compute machines {{ item.name}} in vSphere.
  community.vmware.vmware_guest:
    hostname: "{{ openshift_vsphere.vcenter }}"
    username: "{{ openshift_vsphere.user }}@{{ openshift_vsphere.vcenter }}"
    password: "{{ openshift_vsphere.password }}"
    datacenter: "{{ openshift_vsphere.datacenter }}"
    cluster: "{{ openshift_vsphere.cluster }}"
    datastore: "{{ openshift_node.datastore }}"
    resource_pool: "{% if openshift_vsphere_rp_info.resource_pool_info | json_query('[*].name') | length > 1 %}{{ openshift_vsphere.resourcepool.name }}{% endif %}"
    folder: "{{ openshift_vsphere.folder }}"
    name: "{{ item.name }}"
    template: "{{ openshift_node.template }}"
    state: '{% if item.state is defined and item.state == "absent" %}absent{% else %}poweredon{% endif %}'
    force: true
    disk:
    - size_gb: '{% if openshift_node.specs[item.role].disk is defined %}{{ openshift_node.specs[item.role].disk | int}}{% else %}31{% endif %}'
      type: "{{ openshift_node.disktype | default('thin') }}"
      datastore: "{{ openshift_node.datastore }}"
    hardware:
      memory_mb: "{{ openshift_node.specs[item.role].memory | int * 1024 }}"
      num_cpus: "{{ openshift_node.specs[item.role].cpucount | int }}"
    advanced_settings:
      - { key: "guestinfo.afterburn.initrd.network-kargs", value: 'ip={{ item.ip }}::{{ openshift_node.gateway }}:{{ openshift_node.netmask }}:{{ item.name }}::none:{{ openshift_node.dns | list | join(":") }}' }
      - { key: "disk.EnableUUID", value: "TRUE" }
      - { key: "stealclock.enable", value: "TRUE" }
      - { key: "guestinfo.ignition.config.data", value: '{% if item.role == "bootstrap" %}{{ lookup("file","ignition/merge-bootstrap.ign") | b64encode }}{% elif item.role == "master" %}{{ lookup("file","ignition/master.ign") | b64encode }}{% else %}{{ lookup("file","ignition/worker.ign") | b64encode }}{% endif %}' }
      - { key: "guestinfo.ignition.config.data.encoding", value: "base64" }
    wait_for_ip_address: "no"
    validate_certs: false
  when: (item.role == "bootstrap" and not openshift_ignition_result.stat.exists | bool) or item.role in ["master","worker"]
  delegate_to: localhost
  